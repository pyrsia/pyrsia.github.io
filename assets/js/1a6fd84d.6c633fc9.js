(self.webpackChunkpyrsia=self.webpackChunkpyrsia||[]).push([[9458],{79854:(e,a,n)=>{"use strict";n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var t=n(87462),c=(n(67294),n(3905));n(8209);const o={custom_edit_url:"https://github.com/pyrsia/pyrsia/blob/main/docs/developers/build_from_source_maven.md",sidebar_position:11},i="Pyrsia demo: build Maven images from source",r={unversionedId:"developers/build_from_source_maven",id:"developers/build_from_source_maven",title:"Pyrsia demo: build Maven images from source",description:"Warning: This tutorial is aimed at developers actively contributing to the",source:"@site/docs/developers/build_from_source_maven.md",sourceDirName:"developers",slug:"/developers/build_from_source_maven",permalink:"/docs/developers/build_from_source_maven",draft:!1,editUrl:"https://github.com/pyrsia/pyrsia/blob/main/docs/developers/build_from_source_maven.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{custom_edit_url:"https://github.com/pyrsia/pyrsia/blob/main/docs/developers/build_from_source_maven.md",sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"Pyrsia demo: build Docker images from source",permalink:"/docs/developers/build_from_source_docker"},next:{title:"How to start and debug Pyrsia Node using IDE",permalink:"/docs/developers/setting_up_ide"}},s={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Compile Pyrsia",id:"compile-pyrsia",level:2},{value:"Run the Pyrsia node",id:"run-the-pyrsia-node",level:2},{value:"Create a mapping between the artifact and its source repository",id:"create-a-mapping-between-the-artifact-and-its-source-repository",level:2},{value:"Run build pipeline prototype",id:"run-build-pipeline-prototype",level:2},{value:"Authorize the Pyrsia node as a build node",id:"authorize-the-pyrsia-node-as-a-build-node",level:2},{value:"Trigger a build from source for a given artifact",id:"trigger-a-build-from-source-for-a-given-artifact",level:2},{value:"Wait for the build to finish in the build pipeline",id:"wait-for-the-build-to-finish-in-the-build-pipeline",level:2},{value:"Try to reach consensus with the other authorized nodes",id:"try-to-reach-consensus-with-the-other-authorized-nodes",level:2},{value:"Create a transparency log about the artifact publication",id:"create-a-transparency-log-about-the-artifact-publication",level:2},{value:"Publish the artifact on the p2p network",id:"publish-the-artifact-on-the-p2p-network",level:2},{value:"Use Pyrsia in a Maven project",id:"use-pyrsia-in-a-maven-project",level:2},{value:"Inspect the transparency logs",id:"inspect-the-transparency-logs",level:2}],p={toc:d};function l(e){let{components:a,...n}=e;return(0,c.kt)("wrapper",(0,t.Z)({},p,n,{components:a,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"pyrsia-demo-build-maven-images-from-source"},"Pyrsia demo: build Maven images from source"),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},(0,c.kt)("strong",{parentName:"p"},"Warning:")," This tutorial is aimed at developers actively contributing to the\nPyrsia codebase. If you simply want to use Pyrsia, please have a look at ",(0,c.kt)("a",{parentName:"p",href:"/docs/tutorials/maven"},"Configure Maven to use Pyrsia"))),(0,c.kt)("p",null,"This tutorial describes how to setup a Pyrsia node that can build Maven artifacts\nfrom source with the goal to publish them in the Pyrsia network."),(0,c.kt)("p",null,"Ultimately, the following scenario will be used, but for now some steps\n(indicated below) are skipped for the purpose of this build-from-source demo:"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"Setup at least 3 authorized nodes (Skipped in this demo, only one Pyrsia node\nis used)"),(0,c.kt)("li",{parentName:"ul"},"Make sure a mapping between an artifact and its source exists in the\n",(0,c.kt)("a",{parentName:"li",href:"https://github.com/pyrsia/pyrsia-mappings"},"Pyrsia Mappings Repo")," (for Maven artifacts\nonly)"),(0,c.kt)("li",{parentName:"ul"},"Set up a build pipeline per Pyrsia node and configure the nodes to use them"),(0,c.kt)("li",{parentName:"ul"},"Trigger a build from source for a given artifact"),(0,c.kt)("li",{parentName:"ul"},"Wait for the build to finish in the build pipeline"),(0,c.kt)("li",{parentName:"ul"},"Try to reach consensus with the other authorized nodes, which have to run the\nsame build and verify they produce the same build result. (Skipped in this demo)"),(0,c.kt)("li",{parentName:"ul"},"Create a transparency log about the artifact publication"),(0,c.kt)("li",{parentName:"ul"},"Publish the artifact on the p2p network")),(0,c.kt)("p",null,"See the ",(0,c.kt)("a",{parentName:"p",href:"/docs/developers/pyrsia-architecture-and-use-cases"},"architecture and use-cases"),"\ndocument for more information."),(0,c.kt)("p",null,"Because this demo scenario results in a published Maven artifact in the Pyrsia\nnetwork, we can run a final step to show the build from source worked:"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"Use Pyrsia in a Maven project")),(0,c.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,c.kt)("p",null,"The following steps rely on JDK11 and maven being correctly installed.\nPlease find and install the appropriate ",(0,c.kt)("a",{parentName:"p",href:"https://www.openlogic.com/openjdk-downloads"},"JDK11")," and ",(0,c.kt)("a",{parentName:"p",href:"https://maven.apache.org/install.html"},"mvn")," before proceeding."),(0,c.kt)("h2",{id:"compile-pyrsia"},"Compile Pyrsia"),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"If you build for the first time or face any issues at this step,\nsee the ",(0,c.kt)("a",{parentName:"p",href:"/docs/community/get_involved/local_dev_setup"},"Development Environment")," document.")),(0,c.kt)("p",null,"Download a fresh copy of the codebase by cloning the repo or updating to the\nHEAD of ",(0,c.kt)("inlineCode",{parentName:"p"},"main"),"."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-sh"},"git clone https://github.com/pyrsia/pyrsia.git\n")),(0,c.kt)("p",null,"Let's call this folder ",(0,c.kt)("inlineCode",{parentName:"p"},"PYRSIA_HOME"),". We will refer to this\nname in the following steps."),(0,c.kt)("p",null,"Build binaries by running:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-sh"},"cd $PYRSIA_HOME\ncargo build --workspace\n")),(0,c.kt)("h2",{id:"run-the-pyrsia-node"},"Run the Pyrsia node"),(0,c.kt)("p",null,"Now we will set the following env vars and start a pyrsia node:"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"RUST_LOG: to make sure we can see all the debug logs"),(0,c.kt)("li",{parentName:"ul"},"DEV_MODE: to make sure all non-existing directories are created on-the-fly"),(0,c.kt)("li",{parentName:"ul"},"PYRSIA_ARTIFACT_PATH: pointing to a directory to store artifacts. optionally\nremove this directory prior to starting Pyrsia if you want to start from an\nempty state.")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-sh"},"RUST_LOG=pyrsia=debug DEV_MODE=on PYRSIA_ARTIFACT_PATH=/tmp/pyrsia \\\ncargo run --package pyrsia_node -- --pipeline-service-endpoint http://localhost:8080 --listen-only --init-blockchain\n")),(0,c.kt)("p",null,"As you can see, we specified the ",(0,c.kt)("inlineCode",{parentName:"p"},"--pipeline-service-endpoint")," argument to point\nto ",(0,c.kt)("inlineCode",{parentName:"p"},"http://localhost:8080"),", which is where we will run our build pipeline prototype\n(see below). In a production setup, the build pipeline needs to run on its\nown isolated infrastructure."),(0,c.kt)("h2",{id:"create-a-mapping-between-the-artifact-and-its-source-repository"},"Create a mapping between the artifact and its source repository"),(0,c.kt)("p",null,"In this demo, we will build a Maven artifact from source. Since there's no direct\nconnection between the Maven artifact defined as ",(0,c.kt)("inlineCode",{parentName:"p"},"groupId:artifactId:version")," and\nits source repository, Pyrsia keeps a ",(0,c.kt)("a",{parentName:"p",href:"https://github.com/pyrsia/pyrsia-mappings"},"public mapping repository"),". For every known\nartifact, this repository has a mapping file like this:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "package_type": "Maven2",\n  "package_specific_id": "groupId:artifactId:version",\n  "source_repository": {\n    "Git": {\n      "url": "https://github.com/organization/artifact",\n      "tag": "rel/artifact-version-tag"\n    }\n  },\n  "build_spec_url": ""\n}\n')),(0,c.kt)("p",null,"In case you want to build an artifact from source for which a mapping is not yet\navailable, feel free to create a pull request to add it to the mapping repository."),(0,c.kt)("p",null,"In this demo we will build ",(0,c.kt)("inlineCode",{parentName:"p"},"commons-codec:commons-codec:1.15")," for which the ",(0,c.kt)("a",{parentName:"p",href:"https://github.com/pyrsia/pyrsia-mappings/blob/main/Maven2/commons-codec/commons-codec/1.15/commons-codec-1.15.mapping"},"mapping"),"\nis already available."),(0,c.kt)("h2",{id:"run-build-pipeline-prototype"},"Run build pipeline prototype"),(0,c.kt)("p",null,"In this demo, we use a build pipeline prototype. Eventually, Pyrsia will use\nindustry-standard build pipeline solutions. Integration with such solutions is\ncurrently being investigated."),(0,c.kt)("p",null,"The most important features of the build pipeline are:"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"it runs completely separate from the Pyrsia node"),(0,c.kt)("li",{parentName:"ul"},"it exposes an interface so Pyrsia can start a build"),(0,c.kt)("li",{parentName:"ul"},"it exposes an interface so Pyrsia can download the build output")),(0,c.kt)("p",null,"The current build pipeline prototype only supports Maven builds. It takes\nthe artifact mapping as input (see above), starts a Maven build and provides the\nbuild output as a download."),(0,c.kt)("p",null,"Ensure that JAVA_HOME is setup correctly"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-sh"},"export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_jdk/Contents/Home\n")),(0,c.kt)("p",null,"and maven is available on the PATH"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-sh"},"export PATH=path to your maven download location/apache-maven-3.8.6/bin:$PATH\n")),(0,c.kt)("p",null,"Download or clone the ",(0,c.kt)("a",{parentName:"p",href:"https://github.com/tiainen/pyrsia_build_pipeline_prototype"},"prototype repo"),"\nand run as follows:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-sh"},"cd pyrsia_build_pipeline_prototype\nRUST_LOG=debug cargo run\n")),(0,c.kt)("p",null,"By default, this prototype listens on http port 8080. If you run it on a different\nhost or port, make sure to specify its location when starting the Pyrsia node\nwith ",(0,c.kt)("inlineCode",{parentName:"p"},"--pipeline-service-endpoint")," (see above)."),(0,c.kt)("p",null,"Because we will be using this prototype for building Maven artifacts, make sure\nyou have installed a JDK11 and configured JAVA_HOME before running ",(0,c.kt)("inlineCode",{parentName:"p"},"cargo run"),"."),(0,c.kt)("p",null,"You will see the following output indicating that the build pipeline is ready for use"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-text"},"   Finished dev [unoptimized + debuginfo] target(s) in 1m 07s\n     Running `target/debug/pyrsia_build`\n INFO  actix_server::builder > Starting 8 workers\n INFO  actix_server::server  > Tokio runtime found; starting in existing Tokio runtime\n")),(0,c.kt)("h2",{id:"authorize-the-pyrsia-node-as-a-build-node"},"Authorize the Pyrsia node as a build node"),(0,c.kt)("p",null,"We will use the Pyrsia CLI to authorize node A as a build node. In a new terminal, while\nthe Pyrsia node and build pipeline prototype are running, check if your Pyrsia CLI\nconfig is correct:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-sh"},"cd $PYRSIA_HOME/target/debug\n./pyrsia config --show\nConfig file path: /some/path/default-config.toml\nhost = 'localhost'\nport = '7888'\ndisk_allocated = '10 GB'\n")),(0,c.kt)("p",null,"If you're not using the default port for your Pyrsia node, make sure to configure\nthe CLI using ",(0,c.kt)("inlineCode",{parentName:"p"},"./pyrsia config edit"),"."),(0,c.kt)("p",null,"Next you'll need to find out the peer id of the node. You can see that in its logs\nor you can query the ",(0,c.kt)("inlineCode",{parentName:"p"},"/status")," endpoint like this: (assuming you have ",(0,c.kt)("inlineCode",{parentName:"p"},"jq")," installed)"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-shell"},"curl -s http://localhost:7888/status | jq  .peer_id\n")),(0,c.kt)("p",null,"Once you know the peer id, authorize it like this:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-shell"},"./pyrsia authorize --peer <PEER_ID>\n")),(0,c.kt)("h2",{id:"trigger-a-build-from-source-for-a-given-artifact"},"Trigger a build from source for a given artifact"),(0,c.kt)("p",null,"In this demo we trigger a build for ",(0,c.kt)("inlineCode",{parentName:"p"},"commons-codec:commons-codec:1.15"),".\nThe mapping repository already contains the ",(0,c.kt)("a",{parentName:"p",href:"https://github.com/pyrsia/pyrsia-mappings/blob/main/Maven2/commons-codec/commons-codec/1.15/commons-codec-1.15.mapping"},"source repository mapping"),"."),(0,c.kt)("p",null,"Then trigger the build from source, like this:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-sh"},"./pyrsia build maven --gav commons-codec:commons-codec:1.15\n")),(0,c.kt)("p",null,"The build trigger should return immediately providing a build ID:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-text"},"Build request successfully handled. Build with ID '13abff76-5aea-4d05-8f42-d625943ceb78' has been started.\n")),(0,c.kt)("h2",{id:"wait-for-the-build-to-finish-in-the-build-pipeline"},"Wait for the build to finish in the build pipeline"),(0,c.kt)("p",null,"In the Pyrsia node logs, you will see that a build has been started and the Pyrsia\nnode is now waiting for its result:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-text"},'DEBUG pyrsia::build_service::service        > Updated build info: BuildInfo { id: "13abff76-5aea-4d05-8f42-d625943ceb78", status: Running }\n')),(0,c.kt)("p",null,"In the build pipeline prototype you should see that the build has started:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-text"},"Requesting build of Maven2 for commons-codec:commons-codec:1.15\nStarting build with ID 13abff76-5aea-4d05-8f42-d625943ceb78\n#######################################################\n#\n# Starting Maven2 build for:\n#   commons-codec:commons-codec:1.15\n#\n#######################################################\nCloning into 'repo'...\n...\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  19.787 s\n[INFO] Finished at: 2022-07-15T15:59:42+02:00\n[INFO] ------------------------------------------------------------------------\n...\n")),(0,c.kt)("p",null,"Once the build has finished, the status request from the Pyrsia node will contain:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-text"},'DEBUG pyrsia::build_service::service        > Updated build info: BuildInfo { id: "13abff76-5aea-4d05-8f42-d625943ceb78", status: Success { artifact_urls: ["/build/13abff76-5aea-4d05-8f42-d625943ceb78/artifacts/commons-codec-1.15.pom.md5", "/build/13abff76-5aea-4d05-8f42-d625943ceb78/artifacts/commons-codec-1.15-sources.jar.sha1", "/build/13abff76-5aea-4d05-8f42-d625943ceb78/artifacts/commons-codec-1.15.pom", "/build/13abff76-5aea-4d05-8f42-d625943ceb78/artifacts/commons-codec-1.15.jar", "/build/13abff76-5aea-4d05-8f42-d625943ceb78/artifacts/commons-codec-1.15-tests.jar.sha1", "/build/13abff76-5aea-4d05-8f42-d625943ceb78/artifacts/commons-codec-1.15.jar.sha1", "/build/13abff76-5aea-4d05-8f42-d625943ceb78/artifacts/commons-codec-1.15-tests.jar.md5", "/build/13abff76-5aea-4d05-8f42-d625943ceb78/artifacts/commons-codec-1.15-tests.jar", "/build/13abff76-5aea-4d05-8f42-d625943ceb78/artifacts/commons-codec-1.15-test-sources.jar.sha1", "/build/13abff76-5aea-4d05-8f42-d625943ceb78/artifacts/commons-codec-1.15-test-sources.jar", "/build/13abff76-5aea-4d05-8f42-d625943ceb78/artifacts/commons-codec-1.15.jar.md5", "/build/13abff76-5aea-4d05-8f42-d625943ceb78/artifacts/commons-codec-1.15.pom.sha1", "/build/13abff76-5aea-4d05-8f42-d625943ceb78/artifacts/commons-codec-1.15-sources.jar", "/build/13abff76-5aea-4d05-8f42-d625943ceb78/artifacts/commons-codec-1.15-sources.jar.md5", "/build/13abff76-5aea-4d05-8f42-d625943ceb78/artifacts/commons-codec-1.15-test-sources.jar.md5"] } }\n')),(0,c.kt)("p",null,"And Pyrsia will download all build result files from the pipeline service."),(0,c.kt)("h2",{id:"try-to-reach-consensus-with-the-other-authorized-nodes"},"Try to reach consensus with the other authorized nodes"),(0,c.kt)("p",null,"In a regular scenario, the Pyrsia node will now try to reach consensus with the\nother authorized nodes, but this step is skipped in this demo."),(0,c.kt)("h2",{id:"create-a-transparency-log-about-the-artifact-publication"},"Create a transparency log about the artifact publication"),(0,c.kt)("p",null,"When consensus has been reached, a transparency log is created for each built artifact."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-text"},'INFO  pyrsia::artifact_service::service     > Adding artifact to transparency log: AddArtifactRequest { package_type: Maven2, package_specific_id: "commons-codec:commons-codec:1.15", num_artifacts: 15, package_specific_artifact_id: "commons-codec/commons-codec/1.15/commons-codec-1.15.pom.md5", artifact_hash: "ff89aba3ea6e2655feba41fdff2d8388b09f421ca6ca0ff5c49dbc24e53ae86a" }\nINFO  pyrsia::artifact_service::service     > Transparency Log for build with ID 13abff76-5aea-4d05-8f42-d625943ceb78 successfully created.\nDEBUG pyrsia::transparency_log::log         > Transparency log inserted into database with id: 95bd06e4-8254-437f-bc28-432883379426\n')),(0,c.kt)("h2",{id:"publish-the-artifact-on-the-p2p-network"},"Publish the artifact on the p2p network"),(0,c.kt)("p",null,"As a final step in the build from source scenario, the artifacts are stored locally\nand provided on the p2p network."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-text"},'INFO  pyrsia::artifact_service::service     > put_artifact with id: e7eb2455-51b8-4d93-b8b7-1cde8004f1e2\nINFO  pyrsia::artifact_service::storage     > An artifact is being pushed to the artifact manager e7eb2455-51b8-4d93-b8b7-1cde8004f1e2\nDEBUG pyrsia::network::client               > p2p::Client::provide "e7eb2455-51b8-4d93-b8b7-1cde8004f1e2"\n')),(0,c.kt)("p",null,"Now we are ready to use the published artifacts in our build workflow as shown in\nthe sample section below."),(0,c.kt)("h2",{id:"use-pyrsia-in-a-maven-project"},"Use Pyrsia in a Maven project"),(0,c.kt)("p",null,"Now that we have a published Maven artifact in the Pyrsia network, we can try to\nuse it in a Maven project."),(0,c.kt)("p",null,"Create a Java project:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-sh"},"mkdir pyrsia-maven-sample\ncd pyrsia-maven-sample\nmkdir -p src/main/java/org/pyrsia/sample\n")),(0,c.kt)("p",null,"Create a file ",(0,c.kt)("inlineCode",{parentName:"p"},"src/main/java/org/pyrsia/sample/Main.java"),":"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-java"},'package org.pyrsia.sample;\n\nimport java.util.Arrays;\nimport org.apache.commons.codec.binary.Hex;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        byte[] data = { 1, 2, 3, 4, 5, 6, 7, 8 };\n        String hexEncodedData = Hex.encodeHexString(data);\n\n        System.out.println("Byte array " + Arrays.toString(data) + " encoded as a hex string: " + hexEncodedData);\n    }\n}\n')),(0,c.kt)("p",null,"The code in this sample uses ",(0,c.kt)("inlineCode",{parentName:"p"},"org.apache.commons.codec.binary.Hex")," from the commons-codec\nlibrary, so let's add this as dependency in our Maven build:"),(0,c.kt)("p",null,"Create a ",(0,c.kt)("inlineCode",{parentName:"p"},"pom.xml")," file:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-xml"},'<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xmlns="http://maven.apache.org/POM/4.0.0"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0\n              http://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>org.pyrsia.sample</groupId>\n    <artifactId>maven</artifactId>\n    <packaging>jar</packaging>\n    <version>1.0.0-SNAPSHOT</version>\n    <name>Pyrsia Sample for Maven</name>\n\n    <repositories>\n        <repository>\n            <id>pyrsia</id>\n            <url>http://localhost:7888/maven2</url>\n        </repository>\n    </repositories>\n\n    <dependencies>\n        <dependency>\n            <groupId>commons-codec</groupId>\n            <artifactId>commons-codec</artifactId>\n            <version>1.15</version>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.10.1</version>\n                <configuration>\n                    <release>11</release>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n')),(0,c.kt)("p",null,"As you can see, we have set the repository to ",(0,c.kt)("inlineCode",{parentName:"p"},"http://localhost:7888/maven2"),", which\nwill trigger the Maven build to request dependencies from this URL, which is our\nPyrsia node, acting as a Maven repository."),(0,c.kt)("p",null,"To make sure your local maven cache doesn't already contain this dependency, remove\nit first:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-sh"},"rm -rf ~/.m2/repository/commons-codec/commons-codec/1.15\n")),(0,c.kt)("p",null,"And then run the maven build:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-sh"},"mvn clean package\n")),(0,c.kt)("p",null,"It should show output like this:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-text"},"[INFO] Scanning for projects...\n[INFO]\n[INFO] ----------------------< org.pyrsia.sample:maven >-----------------------\n[INFO] Building Pyrsia Sample for Maven 1.0.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\nDownloading from pyrsia: http://localhost:7888/maven2/commons-codec/commons-codec/1.15/commons-codec-1.15.pom\nDownloaded from pyrsia: http://localhost:7888/maven2/commons-codec/commons-codec/1.15/commons-codec-1.15.pom (15 kB at 343 kB/s)\nDownloading from pyrsia: http://localhost:7888/maven2/commons-codec/commons-codec/1.15/commons-codec-1.15.jar\nDownloaded from pyrsia: http://localhost:7888/maven2/commons-codec/commons-codec/1.15/commons-codec-1.15.jar (354 kB at 9.3 MB/s)\n...\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.925 s\n[INFO] Finished at: 2022-07-15T16:33:39+02:00\n[INFO] ------------------------------------------------------------------------\n")),(0,c.kt)("p",null,"The dependency was downloaded from Pyrsia, which you can verify in the Pyrsia node\nlogs:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-text"},'DEBUG pyrsia::java::maven2::routes                    > route full path: /maven2/commons-codec/commons-codec/1.15/commons-codec-1.15.jar\nDEBUG pyrsia::java::maven2::handlers::maven_artifacts > Requesting maven artifact: /maven2/commons-codec/commons-codec/1.15/commons-codec-1.15.jar\nDEBUG pyrsia::java::maven2::handlers::maven_artifacts > Requesting artifact with package specific id: commons-codec:commons-codec:1.15, and package specific artifact id: commons-codec/commons-codec/1.15/commons-codec-1.15.jar. If not found a build will be requested\nINFO  pyrsia::artifact_service::storage               > An artifact is being pulled from the artifact manager 73cee038-59dc-46f1-a325-fef83e4ff51c\nINFO  pyrsia_registry                                 > 127.0.0.1:55180 "GET /maven2/commons-codec/commons-codec/1.15/commons-codec-1.15.jar HTTP/1.1" 200 "-" "Apache-Maven/3.6.3 (Java 11.0.8; Linux 5.15.0-56-generic)" 24.345381ms\n')),(0,c.kt)("h2",{id:"inspect-the-transparency-logs"},"Inspect the transparency logs"),(0,c.kt)("p",null,"The transparency logs that were created as part of the build from source process,\ncan be inspected using the Pyrsia CLI."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-sh"},"/pyrsia inspect-log maven --gav commons-codec:commons-codec:1.15\n")),(0,c.kt)("p",null,"This results in the transparency logs for all the Pyrsia artifacts that make up\nthe Maven library:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-text"},'[\n  {\n    "artifact_hash": "ff89aba3ea6e2655feba41fdff2d8388b09f421ca6ca0ff5c49dbc24e53ae86a",\n    "artifact_id": "e7eb2455-51b8-4d93-b8b7-1cde8004f1e2",\n    "id": "95bd06e4-8254-437f-bc28-432883379426",\n    "node_id": "6d2faed8-88fe-4aac-8414-ea0055cb828d",\n    "node_public_key": "076a5a92-9052-43ff-a665-2e9b6a88df73",\n    "num_artifacts": 15,\n    "operation": "AddArtifact",\n    "package_specific_artifact_id": "commons-codec/commons-codec/1.15/commons-codec-1.15.pom.md5",\n    "package_specific_id": "commons-codec:commons-codec:1.15",\n    "package_type": "Maven2",\n    "source_hash": "",\n    "source_id": "5e58cae7-b06c-4d21-a475-fb8b188e1a3f",\n    "timestamp": 1671004615\n  },\n  {\n    "artifact_hash": "944a6c7643cc0ef821d38afdb576c3a3ea2d2308c053eb8e0bcbbc624766e345",\n    "artifact_id": "0f02db39-a3ae-4039-84ce-68b1726156ce",\n    "id": "7bf97f16-e8a6-4c56-8c4c-4d7e6adf7cfd",\n    "node_id": "3bf52a5a-1230-4b1d-b32f-b660d2d7a5cd",\n    "node_public_key": "ddd83497-e571-4282-8be2-5307df1a636d",\n    "num_artifacts": 15,\n    "operation": "AddArtifact",\n    "package_specific_artifact_id": "commons-codec/commons-codec/1.15/commons-codec-1.15-sources.jar.sha1",\n    "package_specific_id": "commons-codec:commons-codec:1.15",\n    "package_type": "Maven2",\n    "source_hash": "",\n    "source_id": "95a0ca89-dcfa-4306-9314-92e2411c5fce",\n    "timestamp": 1671004615\n  },\n  {\n    "artifact_hash": "c86ee198a35a3715487860f419cbf642e7e4d9e8714777947dbe6a4e3a20ab58",\n    "artifact_id": "311a547b-bce2-429a-8def-783f4e2fbc61",\n    "id": "2fcbefd2-c40f-4a06-8b5d-2061e7e4b6b5",\n    "node_id": "4899356d-f1d5-4041-a7dd-2e26dce42fd4",\n    "node_public_key": "5faeb8d0-0e58-4fed-a0a8-49b62ec75095",\n    "num_artifacts": 15,\n    "operation": "AddArtifact",\n    "package_specific_artifact_id": "commons-codec/commons-codec/1.15/commons-codec-1.15.pom",\n    "package_specific_id": "commons-codec:commons-codec:1.15",\n    "package_type": "Maven2",\n    "source_hash": "",\n    "source_id": "94617920-9637-4722-83e6-7850ef4e9153",\n    "timestamp": 1671004615\n  },\n  {\n    "artifact_hash": "9eb1496028b5de8910b14febc3f6a10722eb61aee79c0f2bfda3678d64381541",\n    "artifact_id": "73cee038-59dc-46f1-a325-fef83e4ff51c",\n    "id": "595a61d8-bcce-4e67-9d0e-47760838697e",\n    "node_id": "a61060dc-998e-4e4b-b881-34b8268525b4",\n    "node_public_key": "86e858cd-33ec-44b3-9465-0a330db1b901",\n    "num_artifacts": 15,\n    "operation": "AddArtifact",\n    "package_specific_artifact_id": "commons-codec/commons-codec/1.15/commons-codec-1.15.jar",\n    "package_specific_id": "commons-codec:commons-codec:1.15",\n    "package_type": "Maven2",\n    "source_hash": "",\n    "source_id": "344c7854-f0bd-47f4-9972-d490d42054f9",\n    "timestamp": 1671004615\n  },\n  {\n    "artifact_hash": "db4e82248ee9c594e63e4ad5bef30eb7063ed3c0bd498ed3af71294b0ebf7a3e",\n    "artifact_id": "93576736-e64f-4da2-8cee-b88034e54c4c",\n    "id": "7e1953a3-c2c6-4efd-b48e-56ef387b9b33",\n    "node_id": "6f2f1613-89b3-48c5-ba5d-39cd1cb55004",\n    "node_public_key": "9553c499-db8e-48c1-8370-171e106a3329",\n    "num_artifacts": 15,\n    "operation": "AddArtifact",\n    "package_specific_artifact_id": "commons-codec/commons-codec/1.15/commons-codec-1.15-tests.jar.sha1",\n    "package_specific_id": "commons-codec:commons-codec:1.15",\n    "package_type": "Maven2",\n    "source_hash": "",\n    "source_id": "e982f1a7-5d7b-4860-aab3-adaf33ce1bfb",\n    "timestamp": 1671004616\n  },\n  {\n    "artifact_hash": "9bcaba0174b9803b04312a577917b20a9152582f1c8bf3b4ca9876f5a1569164",\n    "artifact_id": "df34d9de-9757-4c6d-b7a6-730c1cb0e18e",\n    "id": "b6b0ebfb-8fed-4229-906f-7e9528601880",\n    "node_id": "faf9ae75-a6e4-49bc-bb4e-a3e82e1f00b4",\n    "node_public_key": "bae676c7-95b0-4c16-8520-b53fcfda1cdc",\n    "num_artifacts": 15,\n    "operation": "AddArtifact",\n    "package_specific_artifact_id": "commons-codec/commons-codec/1.15/commons-codec-1.15.jar.sha1",\n    "package_specific_id": "commons-codec:commons-codec:1.15",\n    "package_type": "Maven2",\n    "source_hash": "",\n    "source_id": "cb5d0c3b-4475-4b76-b039-64bceb3af222",\n    "timestamp": 1671004616\n  },\n  {\n    "artifact_hash": "2758a7c8666bc7a91cb74a042b24f8e7f0c912e4a5461dbaf5fa35b227332c65",\n    "artifact_id": "236c5cb0-ddf4-4f16-89bf-bc5ec1052abd",\n    "id": "a36faabf-d51a-40d0-b4e8-addf56cfe2f7",\n    "node_id": "2276b670-fed6-46b1-b8f0-fb03ed775ab6",\n    "node_public_key": "638f0276-ea41-4257-8dda-089ae867a5de",\n    "num_artifacts": 15,\n    "operation": "AddArtifact",\n    "package_specific_artifact_id": "commons-codec/commons-codec/1.15/commons-codec-1.15-tests.jar.md5",\n    "package_specific_id": "commons-codec:commons-codec:1.15",\n    "package_type": "Maven2",\n    "source_hash": "",\n    "source_id": "5feaa8d2-f868-4ae4-8f53-44da49a1f85e",\n    "timestamp": 1671004616\n  },\n  {\n    "artifact_hash": "4d1cf8fc05b8952412bcb436579bc335987364900e1f44194dbb98930c23eee8",\n    "artifact_id": "cc5a5cce-f292-4865-9dba-c96986b042d2",\n    "id": "5dcb88dc-0162-4a86-b3a3-80d6288290c9",\n    "node_id": "dfcaf577-dab4-4ada-a3b8-e4948898308a",\n    "node_public_key": "d2a68745-908a-4210-aea9-73138084e228",\n    "num_artifacts": 15,\n    "operation": "AddArtifact",\n    "package_specific_artifact_id": "commons-codec/commons-codec/1.15/commons-codec-1.15-tests.jar",\n    "package_specific_id": "commons-codec:commons-codec:1.15",\n    "package_type": "Maven2",\n    "source_hash": "",\n    "source_id": "b02667a1-9938-441b-9c48-1bf70219f999",\n    "timestamp": 1671004616\n  },\n  {\n    "artifact_hash": "a9be7ceaf4962f4c897239972a1dac711ca7570c2cf47a8b09b7b343950caf41",\n    "artifact_id": "521faabe-7205-4ef6-8cdc-f4fafb0c58d0",\n    "id": "1a200591-cf3c-497f-9f87-5fba40ab61a6",\n    "node_id": "8b6a0dfb-94ba-4122-b06b-a9daefc08c00",\n    "node_public_key": "aa0a16d2-6957-4107-8bd4-1936d2679e12",\n    "num_artifacts": 15,\n    "operation": "AddArtifact",\n    "package_specific_artifact_id": "commons-codec/commons-codec/1.15/commons-codec-1.15-test-sources.jar.sha1",\n    "package_specific_id": "commons-codec:commons-codec:1.15",\n    "package_type": "Maven2",\n    "source_hash": "",\n    "source_id": "3838c987-75a4-49d8-8883-4936ca6c6be0",\n    "timestamp": 1671004616\n  },\n  {\n    "artifact_hash": "997a5e8ed8c37e0c3dcdf20e76db11279c055a20c3875731390c7b8008912c4f",\n    "artifact_id": "7c3d7314-e455-4715-b760-a30f8496c1dc",\n    "id": "d371a08f-de02-4fe0-8aea-a3bd78d30504",\n    "node_id": "29d9a1aa-60e6-4013-aacb-51f8f9baab1e",\n    "node_public_key": "b4c5b976-3894-4fcc-bdf2-d98943bab7c3",\n    "num_artifacts": 15,\n    "operation": "AddArtifact",\n    "package_specific_artifact_id": "commons-codec/commons-codec/1.15/commons-codec-1.15-test-sources.jar",\n    "package_specific_id": "commons-codec:commons-codec:1.15",\n    "package_type": "Maven2",\n    "source_hash": "",\n    "source_id": "802473db-3d7b-47af-b716-dba0fd83b6cd",\n    "timestamp": 1671004617\n  },\n  {\n    "artifact_hash": "30b6bfae61e5fdf2832f1378c64bc90cc24e970b7df48e97610afcdf5dc048c7",\n    "artifact_id": "4057f20b-5d0b-4912-ada3-8a8fe596b175",\n    "id": "6ad5899b-ea66-4d1d-85fc-b7d7dd373369",\n    "node_id": "48e97e91-227e-42dd-9fe9-f49aeb7aebce",\n    "node_public_key": "ac8bd86b-6325-4305-b08d-a413574d50f4",\n    "num_artifacts": 15,\n    "operation": "AddArtifact",\n    "package_specific_artifact_id": "commons-codec/commons-codec/1.15/commons-codec-1.15.jar.md5",\n    "package_specific_id": "commons-codec:commons-codec:1.15",\n    "package_type": "Maven2",\n    "source_hash": "",\n    "source_id": "51eb79b0-29bc-4fd6-9e83-49038e355e80",\n    "timestamp": 1671004617\n  },\n  {\n    "artifact_hash": "5dc11ea7cfa14ac8e84250b21166b098f1ce57ba3316ba5cae589269b37ce54a",\n    "artifact_id": "2dfdfe5f-3f2b-47a2-bcff-655a27dfca57",\n    "id": "aa06913a-b1eb-4ab7-8e0a-91659e1ff990",\n    "node_id": "98f3dc15-b999-4cda-be96-e861daa6ceb7",\n    "node_public_key": "0bf9a398-662e-4cfd-9e34-d88256f275ed",\n    "num_artifacts": 15,\n    "operation": "AddArtifact",\n    "package_specific_artifact_id": "commons-codec/commons-codec/1.15/commons-codec-1.15.pom.sha1",\n    "package_specific_id": "commons-codec:commons-codec:1.15",\n    "package_type": "Maven2",\n    "source_hash": "",\n    "source_id": "be90b0ed-885f-40f0-b409-0de0fb4863ec",\n    "timestamp": 1671004617\n  },\n  {\n    "artifact_hash": "930b528fc1cc6ad19b719c8f79fbf494814b3572f4df9f2555186ce2527a3116",\n    "artifact_id": "ec0cd5d0-697e-48f3-bc8a-ef9ef9731ed9",\n    "id": "7c12bd6f-5784-45eb-ac10-ed9f80c1f130",\n    "node_id": "e0571aa3-d5d0-4d77-985e-00cf835ca496",\n    "node_public_key": "51c179cc-9686-4cb4-aeb2-f2cdf93c20ea",\n    "num_artifacts": 15,\n    "operation": "AddArtifact",\n    "package_specific_artifact_id": "commons-codec/commons-codec/1.15/commons-codec-1.15-sources.jar",\n    "package_specific_id": "commons-codec:commons-codec:1.15",\n    "package_type": "Maven2",\n    "source_hash": "",\n    "source_id": "a99fc485-a576-4f77-b513-aa1c5ba38647",\n    "timestamp": 1671004617\n  },\n  {\n    "artifact_hash": "53290bdbc449ae0e0230ab9f4d1d49043a3b67d0c40f49f1b6323188da2f0200",\n    "artifact_id": "a76ea024-dfae-443e-947c-425546944cc1",\n    "id": "a81459be-67d6-4eed-99ba-89800b66742c",\n    "node_id": "92583486-2d4f-47eb-ad7a-1e4cc874f417",\n    "node_public_key": "b73b0bfa-7196-4b23-9189-b320e73d7424",\n    "num_artifacts": 15,\n    "operation": "AddArtifact",\n    "package_specific_artifact_id": "commons-codec/commons-codec/1.15/commons-codec-1.15-sources.jar.md5",\n    "package_specific_id": "commons-codec:commons-codec:1.15",\n    "package_type": "Maven2",\n    "source_hash": "",\n    "source_id": "03b057cb-a078-4cc7-af86-ccf8a9acd700",\n    "timestamp": 1671004618\n  },\n  {\n    "artifact_hash": "e74339769bffce344ee5a4645a64466ad4ffe2002cf774285e3f20fdb110b503",\n    "artifact_id": "a1157f84-27a5-44ba-91ed-7d0b715d5cdc",\n    "id": "11a18760-353b-4b01-8f08-1ebd7beccc0b",\n    "node_id": "4ea91665-c74d-434c-b9bd-cab07f70ccd9",\n    "node_public_key": "e9d812d8-bac1-4920-b846-d0d3d4c305ca",\n    "num_artifacts": 15,\n    "operation": "AddArtifact",\n    "package_specific_artifact_id": "commons-codec/commons-codec/1.15/commons-codec-1.15-test-sources.jar.md5",\n    "package_specific_id": "commons-codec:commons-codec:1.15",\n    "package_type": "Maven2",\n    "source_hash": "",\n    "source_id": "c187d8ab-de26-4811-a2d5-8a0920eb0b9f",\n    "timestamp": 1671004618\n  }\n]\n')))}l.isMDXComponent=!0},11748:(e,a,n)=>{var t={"./locale":89234,"./locale.js":89234};function c(e){var a=o(e);return n(a)}function o(e){if(!n.o(t,e)){var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}return t[e]}c.keys=function(){return Object.keys(t)},c.resolve=o,e.exports=c,c.id=11748}}]);