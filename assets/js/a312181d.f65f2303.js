(self.webpackChunkpyrsia=self.webpackChunkpyrsia||[]).push([[4692],{56763:(e,r,t)=>{"use strict";t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>n,default:()=>k,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var a=t(87462),l=(t(67294),t(3905)),o=t(8209);const i={custom_edit_url:"https://github.com/pyrsia/pyrsia/blob/main/docs/tutorials/docker-pull-pyrsia-decentralized-network-verification.md"},n="Docker Image Downloaded from Pyrsia Decentralized Network - Verification",s={unversionedId:"tutorials/docker-pull-pyrsia-decentralized-network-verification",id:"tutorials/docker-pull-pyrsia-decentralized-network-verification",title:"Docker Image Downloaded from Pyrsia Decentralized Network - Verification",description:"Here we will demonstrate how you will confirm that docker images are getting downloaded from Pyrsia network Docker registry provided you configure your Docker daemon config and image available to Pyrsia network.",source:"@site/docs/tutorials/docker-pull-pyrsia-decentralized-network-verification.md",sourceDirName:"tutorials",slug:"/tutorials/docker-pull-pyrsia-decentralized-network-verification",permalink:"/docs/tutorials/docker-pull-pyrsia-decentralized-network-verification",draft:!1,editUrl:"https://github.com/pyrsia/pyrsia/blob/main/docs/tutorials/docker-pull-pyrsia-decentralized-network-verification.md",tags:[],version:"current",frontMatter:{custom_edit_url:"https://github.com/pyrsia/pyrsia/blob/main/docs/tutorials/docker-pull-pyrsia-decentralized-network-verification.md"},sidebar:"tutorialSidebar",previous:{title:"FAQ",permalink:"/docs/tutorials/faq"},next:{title:"Contributor documentation",permalink:"/docs/developers/"}},c={},d=[{value:"Remove all local images",id:"remove-all-local-images",level:2},{value:"Setup Local Docker Registry",id:"setup-local-docker-registry",level:2},{value:"Pull image from Docker Hub",id:"pull-image-from-docker-hub",level:2},{value:"Tag downloaded image to upload to local registry",id:"tag-downloaded-image-to-upload-to-local-registry",level:2},{value:"Push image to local registry",id:"push-image-to-local-registry",level:2},{value:"Remove image from local cache",id:"remove-image-from-local-cache",level:2},{value:"Let&#39;s Start Using Local Registry",id:"lets-start-using-local-registry",level:2},{value:"Pull from Local Registry",id:"pull-from-local-registry",level:3},{value:"API verification from Local Registry",id:"api-verification-from-local-registry",level:3},{value:"Change the mirror registry to use Local Registry",id:"change-the-mirror-registry-to-use-local-registry",level:3},{value:"Test Docker Pull without specifying registry host:port explicitly",id:"test-docker-pull-without-specifying-registry-hostport-explicitly",level:3},{value:"Set Pyrsia Decentralize Network as Docker Registry Mirror",id:"set-pyrsia-decentralize-network-as-docker-registry-mirror",level:2},{value:"Get Pyrsia Node cofig",id:"get-pyrsia-node-cofig",level:3},{value:"Change Docker daemon config",id:"change-docker-daemon-config",level:3},{value:"Pull Image from Pyrsia",id:"pull-image-from-pyrsia",level:3}],p={toc:d};function k(e){let{components:r,...t}=e;return(0,l.kt)("wrapper",(0,a.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"docker-image-downloaded-from-pyrsia-decentralized-network---verification"},"Docker Image Downloaded from Pyrsia Decentralized Network - Verification"),(0,l.kt)("p",null,"Here we will demonstrate how you will confirm that docker images are getting downloaded from Pyrsia network Docker registry provided you configure your Docker daemon config and image available to Pyrsia network."),(0,l.kt)("h2",{id:"remove-all-local-images"},"Remove all local images"),(0,l.kt)("p",null,"Script removes all docker images from local"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'for imgid in $(docker images -q); do\n    echo "removing Image ID: $imgid"\n    docker rmi -f $imgid\ndone\n')),(0,l.kt)("h2",{id:"setup-local-docker-registry"},"Setup Local Docker Registry"),(0,l.kt)("p",null,"Run following command to have a local docker registry."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"docker run -d \\\n -p 5000:5000 \\\n --restart=always \\\n --name registry \\\n registry:2\n")),(0,l.kt)("h2",{id:"pull-image-from-docker-hub"},"Pull image from Docker Hub"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"docker pull alpine:3.16.2\n")),(0,l.kt)("p",null,"Docker pull log looks like below. Last line of the log states ",(0,l.kt)("inlineCode",{parentName:"p"},"docker.io/library/alpine:3.16.2")," which is very important. It shows from where the artifact got downloaded."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"3.16.2: Pulling from library/alpine\nDigest: sha256:bc41182d7ef5ffc53a40b044e725193bc10142a1243f395ee852a8d9730fc2ad\nStatus: Image is up to date for alpine:3.16.2\ndocker.io/library/alpine:3.16.2\n")),(0,l.kt)("h2",{id:"tag-downloaded-image-to-upload-to-local-registry"},"Tag downloaded image to upload to local registry"),(0,l.kt)("p",null,"Create a mapping from hostname ",(0,l.kt)("inlineCode",{parentName:"p"},"docker.localhost")," to IP ",(0,l.kt)("inlineCode",{parentName:"p"},"127.0.0.1")," in ",(0,l.kt)("inlineCode",{parentName:"p"},"/etc/hosts")," file."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"# Added manually for Docker Desktop\n127.0.0.1 docker.localhost\n")),(0,l.kt)("p",null,"Tag the image as ",(0,l.kt)("inlineCode",{parentName:"p"},"docker.localhost:5000/alpine:3.16.2"),". This creates an additional tag for the existing image. When the first part of the tag is a hostname and port, Docker interprets this as the location of a registry, when pushing."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"docker tag alpine:3.16.2 docker.localhost:5000/alpine:3.16.2\n")),(0,l.kt)("p",null,"Now list all the images ",(0,l.kt)("inlineCode",{parentName:"p"},"docker images")," and in the list includes following entries"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"REPOSITORY                           TAG       IMAGE ID       CREATED         SIZE\nregistry                             2         dcb3d42c1744   2 weeks ago     24.1MB\nalpine                               3.16.2    9c6f07244728   2 months ago    5.54MB\nlocalhost:5000/alpine                3.16.2    9c6f07244728   2 months ago    5.54MB\ndocker.localhost:5000/alpine         3.16.2    9c6f07244728   2 months ago    5.54MB\ndocker/desktop-vpnkit-controller     v2.0      8c2c38aa676e   17 months ago   21MB\ndocker/desktop-storage-provisioner   v2.0      99f89471f470   18 months ago   41.9MB\n")),(0,l.kt)("h2",{id:"push-image-to-local-registry"},"Push image to local registry"),(0,l.kt)("p",null,"Push to local registry using ",(0,l.kt)("inlineCode",{parentName:"p"},"docker push docker.localhost:5000/alpine:3.16.2"),"\nLogs shows something like following"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"The push refers to repository [docker.localhost:5000/alpine]\n994393dc58e7: Pushed\n3.16.2: digest: sha256:1304f174557314a7ed9eddb4eab12fed12cb0cd9809e4c28f29af86979a3c870 size: 528\n")),(0,l.kt)("p",null,"Now check file system of local registry by logging into running docker container and list the location"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"# ls -ltr /var/lib/registry/docker/registry/v2/repositories/\ntotal 4\ndrwxr-xr-x    5 root     root          4096 Oct 25 06:51 alpine\n")),(0,l.kt)("h2",{id:"remove-image-from-local-cache"},"Remove image from local cache"),(0,l.kt)("p",null,"Remove the locally-cached alpine:3.16.2 and docker.localhost:5000/alpine:3.16.2 images, so that you can test pulling the image from your registry. This does not remove the docker.localhost:5000/alpine:3.16.2 image from your registry."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"docker rmi -f alpine:3.16.2\ndocker rmi -f docker.localhost:5000/alpine:3.16.2\ndocker rmi -f localhost:5000/alpine:3.16.2\n")),(0,l.kt)("h2",{id:"lets-start-using-local-registry"},"Let's Start Using Local Registry"),(0,l.kt)("h3",{id:"pull-from-local-registry"},"Pull from Local Registry"),(0,l.kt)("p",null,"Pull image from local registry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"docker pull docker.localhost:5000/alpine:3.16.2\n")),(0,l.kt)("p",null,"Logs look like following and important things to notice is the last line. It clearly states from where the image has been pulled."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"3.16.2: Pulling from alpine\n213ec9aee27d: Already exists\nDigest: sha256:1304f174557314a7ed9eddb4eab12fed12cb0cd9809e4c28f29af86979a3c870\nStatus: Downloaded newer image for docker.localhost:5000/alpine:3.16.2\ndocker.localhost:5000/alpine:3.16.2\n")),(0,l.kt)("h3",{id:"api-verification-from-local-registry"},"API verification from Local Registry"),(0,l.kt)("p",null,"Verify v2 version support ",(0,l.kt)("inlineCode",{parentName:"p"},"curl -i -X GET http://docker.localhost:5000/v2/"),"."),(0,l.kt)("p",null,"Pulling an Image Manifest ",(0,l.kt)("inlineCode",{parentName:"p"},"curl -i -X GET http://docker.localhost:5000/v2/alpine/manifests/3.16.2")),(0,l.kt)("h3",{id:"change-the-mirror-registry-to-use-local-registry"},"Change the mirror registry to use Local Registry"),(0,l.kt)("p",null,"Add following ",(0,l.kt)("inlineCode",{parentName:"p"},"key:value")," pair to Docker daemon configuration file."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'"insecure-registries": ["http://docker.localhost:5000"]')),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'"registry-mirrors": ["http://docker.localhost:5000"]'))),(0,l.kt)("h3",{id:"test-docker-pull-without-specifying-registry-hostport-explicitly"},"Test Docker Pull without specifying registry host:port explicitly"),(0,l.kt)("p",null,"Remove all the images from cache. Follow ",(0,l.kt)("a",{parentName:"p",href:"#remove-image-from-local-cache"},"Remove image from local cache")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Pull an image available in local registry"),(0,l.kt)("th",{parentName:"tr",align:null},"Pull an image not available in local registry"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"docker pull alpine:3.16.2")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"docker pull alpine:3.15.6"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Logs")," ",(0,l.kt)("br",null),"3.16.2: Pulling from library/alpine",(0,l.kt)("br",null),"213ec9aee27d: ",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("em",{parentName:"strong"},"Already exists")),(0,l.kt)("br",null),"Digest: sha256:bc41182d7ef5ffc53a40b044e725193bc10142a1243f395ee852a8d9730fc2ad",(0,l.kt)("br",null),"Status: Downloaded newer image for alpine:3.16.2",(0,l.kt)("br",null),"docker.io/library/alpine:3.16.2"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Logs")," ",(0,l.kt)("br",null),"3.15.6: Pulling from library/alpine",(0,l.kt)("br",null),"9621f1afde84: ",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("em",{parentName:"strong"},"Pull complete")),(0,l.kt)("br",null),"Digest: sha256:69463fdff1f025c908939e86d4714b4d5518776954ca627cbeff4c74bcea5b22",(0,l.kt)("br",null),"Status: Downloaded newer image for alpine:3.15.6",(0,l.kt)("br",null),"docker.io/library/alpine:3.15.6")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"When it already in local registry, in the log it shows ",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("em",{parentName:"strong"},"Already exists"))),(0,l.kt)("td",{parentName:"tr",align:null},"While it is not in local registry, it shows ",(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("em",{parentName:"strong"},"Pull complete")))))),(0,l.kt)("p",null,"Therefore, in ",(0,l.kt)("inlineCode",{parentName:"p"},"docker pull <image>")," log says ",(0,l.kt)("inlineCode",{parentName:"p"},"Already exists"),", it means that it is getting pulled from one of the mirror. Configuring mirrors doesn't ensure that you are always pulling from internal mirror. Docker checks at the mirror first and then falls back to DockerHub registry."),(0,l.kt)(o.G,{chart:"sequenceDiagram\n    participant Docker Client\n    participant Docker Daemon Config\n    participant Docker Local Registry\n    participant Docker Hub\n\n    Docker Client->>Docker Client: docker pull alpine:3.16.2\n    Docker Client->>+Docker Daemon Config: Get Registry Mirros\n    Docker Daemon Config--\x3e>-Docker Client: Array of Mirros\n    Docker Client->+Docker Local Registry: try to pull alpine:3.16.2 from mirros\n    Docker Local Registry->>Docker Local Registry: Find alpine:3.16.2\n    Docker Local Registry--\x3e>-Docker Client: Awesome! Found in local registry.\n    Note right of Docker Local Registry: 213ec9aee27d: Already exists\n\n    Docker Client->>Docker Client: docker pull alpine:3.15.6\n    Docker Client->>+Docker Daemon Config: Get Registry Mirros\n    Docker Daemon Config--\x3e>-Docker Client: Array of Mirros\n    Docker Client->+Docker Local Registry: try to pull alpine:3.15.6 from mirros\n    Docker Local Registry->>Docker Local Registry: Find alpine:3.15.6\n    Docker Local Registry--\x3e>-Docker Client: Didn't find in local registry.\n    Docker Client->>+Docker Hub: try to pull alpine:3.15.6 from Docker Hub\n    Docker Hub->>Docker Hub: Find alpine:3.15.6\n    Docker Hub--\x3e>-Docker Client: Awesome! Found in Docker Hub.\n    Note right of Docker Hub: 9621f1afde84: Pull complete",mdxType:"Mermaid"}),(0,l.kt)("h2",{id:"set-pyrsia-decentralize-network-as-docker-registry-mirror"},"Set Pyrsia Decentralize Network as Docker Registry Mirror"),(0,l.kt)("p",null,"Set Pyrsia Decentralize Network as Docker Registry Mirror in the same way we did it local Docker Registry"),(0,l.kt)("h3",{id:"get-pyrsia-node-cofig"},"Get Pyrsia Node cofig"),(0,l.kt)("p",null,"Use ",(0,l.kt)("inlineCode",{parentName:"p"},"pyrsia config --show")," to get your node config details. Assume your node details are like below."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"Config file path: /some/path/default-config.toml\nhost = '0.0.0.0'\nport = '7888'\ndisk_allocated = '10 GB'\n")),(0,l.kt)("h3",{id:"change-docker-daemon-config"},"Change Docker daemon config"),(0,l.kt)("p",null,"Create a following ",(0,l.kt)("inlineCode",{parentName:"p"},"key:value")," pair for Docker daemon config and append to the existing config"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'"insecure-registries": ["http://0.0.0.0:7888"]')),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'"registry-mirrors": ["http://0.0.0.0:7888"]'))),(0,l.kt)("p",null,"Apply the config & restart Docker daemon process. ",(0,l.kt)("strong",{parentName:"p"},"Wait for Docker to daemon to restart cleanly"),"."),(0,l.kt)("h3",{id:"pull-image-from-pyrsia"},"Pull Image from Pyrsia"),(0,l.kt)("p",null,"Try to get inspect log from Pyrsia using ",(0,l.kt)("inlineCode",{parentName:"p"},"pyrsia inspect-log docker --image alpine:3.16.2"),". If you find the entries in inpect log\nit means the image is available in Pyrsia. Now remove all the images from local cache. Follow ",(0,l.kt)("a",{parentName:"p",href:"#remove-image-from-local-cache"},"Remove image from local cache"),"."),(0,l.kt)("p",null,"Try to pull the image ",(0,l.kt)("inlineCode",{parentName:"p"},"docker pull alpine:3.16.2"),". You should able to see something like"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"3.16.2: Pulling from library/alpine\n213ec9aee27d: Already exists\nDigest: sha256:bc41182d7ef5ffc53a40b044e725193bc10142a1243f395ee852a8d9730fc2ad\nStatus: Downloaded newer image for alpine:3.16.2\ndocker.io/library/alpine:3.16.2\n")),(0,l.kt)("p",null,"In the log we can see ",(0,l.kt)("strong",{parentName:"p"},"Already exists")," text and this indicates that docker client found it in the mirrors (i.e. Pyrsia network) and pulled it from Pyrsia docker registry."))}k.isMDXComponent=!0},11748:(e,r,t)=>{var a={"./locale":89234,"./locale.js":89234};function l(e){var r=o(e);return t(r)}function o(e){if(!t.o(a,e)){var r=new Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r}return a[e]}l.keys=function(){return Object.keys(a)},l.resolve=o,e.exports=l,l.id=11748}}]);